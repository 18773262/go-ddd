apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        app: {{ .Chart.Name }}
    spec:
      terminationGracePeriodSeconds: 30
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{.Chart.Name}}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag}}"
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port}}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.port}}
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.service.port}}
            initialDelaySeconds: 5
            periodSeconds: 3
          resources:
            limits:
              cpu: 2000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 64Mi
          env:
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu